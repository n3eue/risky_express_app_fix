┌───────────────────────┐
│ 8 Code Vuln  Findings │
└───────────────────────┘
                                                                    
  [../web-app-vulnerabilty-analysis--project-/app.js]
     ❱ [javascript.express.security.audit.express-check-csurf-middleware-usage.express-check-csurf-middleware-usage]
          A CSRF middleware was not detected in your express application. Ensure you are either using one such
          as `csurf` or `csrf` (see rule references) and/or you are properly doing CSRF validation in your    
          routes with a token or cookies.                                                                     
                                                                                 
                                                                                                              
            7┆ const app = express();
   
    ❯❱ [javascript.express.security.audit.express-cookie-settings.express-cookie-session-default-name]
          Don’t use the default session cookie name Using the default session cookie name can open your app to
          attacks. The security issue posed is similar to X-Powered-By: a potential attacker can use it to    
          fingerprint the server and target attacks accordingly.                                              
                                                                                 
                                                                                                              
           14┆ session({
           15┆   secret: 'mysecretkey',
           16┆   resave: false,
           17┆   saveUninitialized: true,
           18┆ })
   
    ❯❱ [javascript.express.security.audit.express-cookie-settings.express-cookie-session-no-domain]
          Default session middleware settings: `domain` not set. It indicates the domain of the cookie; use it
          to compare against the domain of the server in which the URL is being requested. If they match, then
          check the path attribute next.                                                                      
                                                                                 
                                                                                                              
           14┆ session({
           15┆   secret: 'mysecretkey',
           16┆   resave: false,
           17┆   saveUninitialized: true,
           18┆ })
   
    ❯❱ [javascript.express.security.audit.express-cookie-settings.express-cookie-session-no-expires]
          Default session middleware settings: `expires` not set. Use it to set expiration date for persistent
          cookies.                                                                                                                                                                    
                                                                                                              
           14┆ session({
           15┆   secret: 'mysecretkey',
           16┆   resave: false,
           17┆   saveUninitialized: true,
           18┆ })
   
    ❯❱ [javascript.express.security.audit.express-cookie-settings.express-cookie-session-no-httponly]
          Default session middleware settings: `httpOnly` not set. It ensures the cookie is sent only over
          HTTP(S), not client JavaScript, helping to protect against cross-site scripting attacks.                                                                            
                                                                                                          
           14┆ session({
           15┆   secret: 'mysecretkey',
           16┆   resave: false,
           17┆   saveUninitialized: true,
           18┆ })
   
    ❯❱ [javascript.express.security.audit.express-cookie-settings.express-cookie-session-no-path]
          Default session middleware settings: `path` not set. It indicates the path of the cookie; use it to
          compare against the request path. If this and domain match, then send the cookie in the request.                                                                          
                                                                                                             
           14┆ session({
           15┆   secret: 'mysecretkey',
           16┆   resave: false,
           17┆   saveUninitialized: true,
           18┆ })
   
    ❯❱ [javascript.express.security.audit.express-cookie-settings.express-cookie-session-no-secure]
          Default session middleware settings: `secure` not set. It ensures the browser only sends the cookie
          over HTTPS.                                                                                                                                                               
                                                                                                             
           14┆ session({
           15┆   secret: 'mysecretkey',
           16┆   resave: false,
           17┆   saveUninitialized: true,
           18┆ })
   
    ❯❱ [javascript.express.security.audit.express-session-hardcoded-secret.express-session-hardcoded-secret]
          A hard-coded credential was detected. It is not recommended to store credentials in source-code, as
          this risks secrets being leaked and used by either an internal or external malicious adversary. It 
          is recommended to use environment variables to securely provide credentials or retrieve credentials
          from a secure vault or HSM (Hardware Security Module).                                                                                                                   
                                                                                                             
           15┆ secret: 'mysecretkey',
